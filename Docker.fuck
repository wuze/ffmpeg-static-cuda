FROM ubuntu:22.04 AS builder

RUN apt-get update -y && apt-get -y install \
    autoconf \
    automake \ 
    build-essential \ 
    nvidia-cuda-toolkit \
    cmake \
    git \
    jq \
    gawk \
    cmake \
    meson \
    libfreetype6-dev \
    libgnutls28-dev \
    libsdl2-dev \
    libtool \
    libva-dev \
    libc6 \
    libc6-dev \
    libnuma1 \
    libnuma-dev \
    libvdpau-dev \
    libvorbis-dev \
    libxcb1-dev \
    libxcb-shm0-dev \
    libxcb-xfixes0-dev \
    libssl-dev \
    libxml2-dev \
    libgraphite2-dev \
    libsnappy-dev \
    libsoxr-dev \
    libfribidi-dev \
    libharfbuzz-dev \
    libfontconfig-dev \
    libpkgconf-dev \
    texinfo \
    wget \
    yasm \
    nasm \ 
    curl \
    zlib1g-dev \
    libfftw3-dev \ 
    libsamplerate-dev \ 
    libvo-amrwbenc-dev \
    ninja-build

SHELL ["/usr/bin/bash", "-c"]

RUN curl https://sh.rustup.rs -sSf | bash -s -- -y && \
    /root/.cargo/bin/cargo install cargo-c

ARG CFLAGS="-O3 -s -static-libgcc -fno-strict-overflow -fstack-protector-all -fPIC"
ARG CXXFLAGS="-O3 -s -static-libgcc -fno-strict-overflow -fstack-protector-all -fPIC"
ARG LDFLAGS="-Wl,-z,relro,-z,now"

# retry dns and some http codes that might be transient errors
ARG WGET_OPTS="--retry-on-host-error --retry-on-http-error=429,500,502,503"



ARG LIBASS_VERSION=0.17.1
ARG LIBASS_URL="https://github.com/libass/libass/releases/download/$LIBASS_VERSION/libass-$LIBASS_VERSION.tar.gz"
ARG LIBASS_SHA256=d653be97198a0543c69111122173c41a99e0b91426f9e17f06a858982c2fb03d
RUN \
    wget $WGET_OPTS -O libass.tar.gz "$LIBASS_URL" && \
    echo "$LIBASS_SHA256  libass.tar.gz" | sha256sum --status -c - && \
    tar xf libass.tar.gz && \
    cd libass-* && ./configure --disable-shared --enable-static && \
    make -j$(nproc) && make install


ARG RUBBERBAND_VERSION=2.0.2
ARG RUBBERBAND_URL="https://breakfastquay.com/files/releases/rubberband-$RUBBERBAND_VERSION.tar.bz2"
ARG RUBBERBAND_SHA256=b9eac027e797789ae99611c9eaeaf1c3a44cc804f9c8a0441a0d1d26f3d6bdf9
RUN \
    wget $WGET_OPTS -O rubberband.tar.bz2 "$RUBBERBAND_URL" && \
    echo "$RUBBERBAND_SHA256  rubberband.tar.bz2" | sha256sum --status -c - && \
    tar xf rubberband.tar.bz2 && \
    cd rubberband-* && \
    meson -Ddefault_library=static -Dfft=fftw -Dresampler=libsamplerate build && \
    ninja -j$(nproc) -vC build install
#   echo "Requires.private: fftw3 samplerate" >> /usr/local/lib/pkgconfig/rubberband.pc

ARG LIBSHINE_VERSION=3.1.1
ARG LIBSHINE_URL="https://github.com/toots/shine/releases/download/$LIBSHINE_VERSION/shine-$LIBSHINE_VERSION.tar.gz"
ARG LIBSHINE_SHA256=58e61e70128cf73f88635db495bfc17f0dde3ce9c9ac070d505a0cd75b93d384
RUN \
    wget $WGET_OPTS -O libshine.tar.gz "$LIBSHINE_URL" && \
    echo "$LIBSHINE_SHA256  libshine.tar.gz" | sha256sum --status -c - && \
    tar xf libshine.tar.gz && cd shine* && \
    ./configure --with-pic --enable-static --disable-shared --disable-fast-install && \
    make -j$(nproc) install

ARG SPEEX_VERSION=1.2.1
ARG SPEEX_URL="https://github.com/xiph/speex/archive/Speex-$SPEEX_VERSION.tar.gz"
ARG SPEEX_SHA256=beaf2642e81a822eaade4d9ebf92e1678f301abfc74a29159c4e721ee70fdce0
RUN \
    wget $WGET_OPTS -O speex.tar.gz "$SPEEX_URL" && \
    echo "$SPEEX_SHA256  speex.tar.gz" | sha256sum --status -c - && \
    tar xf speex.tar.gz && \
    cd speex-Speex-* && ./autogen.sh && ./configure --disable-shared --enable-static && \
    make -j$(nproc) install

ARG SRT_VERSION=1.5.1
ARG SRT_URL="https://github.com/Haivision/srt/archive/v$SRT_VERSION.tar.gz"
ARG SRT_SHA256=af891e7a7ffab61aa76b296982038b3159da690f69ade7c119f445d924b3cf53
RUN \
    wget $WGET_OPTS -O libsrt.tar.gz "$SRT_URL" && \
    echo "$SRT_SHA256  libsrt.tar.gz" | sha256sum --status -c - && \
    tar xf libsrt.tar.gz && cd srt-* && mkdir build && cd build && \
    cmake \
    -G"Unix Makefiles" \
    -DCMAKE_VERBOSE_MAKEFILE=ON \
    -DCMAKE_BUILD_TYPE=Release \
    -DENABLE_SHARED=OFF \
    -DENABLE_APPS=OFF \
    -DENABLE_CXX11=ON \
    -DUSE_STATIC_LIBSTDCXX=ON \
    -DOPENSSL_USE_STATIC_LIBS=ON \
    -DENABLE_LOGGING=OFF \
    -DCMAKE_INSTALL_LIBDIR=lib \
    -DCMAKE_INSTALL_INCLUDEDIR=include \
    -DCMAKE_INSTALL_BINDIR=bin \
    .. && \
    make -j$(nproc) && make install


ARG OGG_VERSION=1.3.5
ARG OGG_URL="https://downloads.xiph.org/releases/ogg/libogg-$OGG_VERSION.tar.gz"
ARG OGG_SHA256=0eb4b4b9420a0f51db142ba3f9c64b333f826532dc0f48c6410ae51f4799b664
RUN \
    wget $WGET_OPTS -O libogg.tar.gz "$OGG_URL" && \
    echo "$OGG_SHA256  libogg.tar.gz" | sha256sum --status -c - && \
    tar xf libogg.tar.gz && \
    cd libogg-* && ./configure --disable-shared --enable-static && \
    make -j$(nproc) install


















